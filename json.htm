<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <style>
    body {
      -webkit-text-size-adjust: none;
    }

    input, textarea {
      font-size: 1em;
      width: 100%;
      max-width: 30em;
    }
  </style>
</head>

<body>
  <!--input type='text' id='url' style="width:90%;max-width:30em" onchange='geturl(this.value)'>
  <br /-->
  <textarea id='url2' rols="2" style="width:90%;;max-width:30em" onchange='geturl(this.value)'></textarea>
  <br />
  <input type='file' id='file' onchange='showfs(this.files)'>
  <pre id='result' style="overflow-x:scroll;"></pre>
</body>
<script>
  function setHTML(id, str) {
    e = document.getElementById(id);
    e && (e.innerHTML = str);
  }

  function setValue(id, str) {
    e = document.getElementById(id);
    e && (e.value = str);
  }

  function getValue(id) {
    e = document.getElementById(id);
    return e ? e.value : "";
  }


  function formatjson(s) {
    try {
      j = JSON.parse(s)
      return JSON.stringify(j, ' ', 2)
    } catch {
      return s
    }
  }


  function tableHTML(s) {
    var ret = ''
    var rows = s.split("\n")
    ret += "<table>"
    for (var i = 0; i < rows.length; i++) {
      var cols = rows[i].split(",");
      ret += "<tr>"
      for (var j = 0; j < cols.length; j++) {
        ret += "<td>" + cols[j] + "</td>"
      }
      ret += "</tr>"
    }
    ret += "</table>"
    return ret
  }


  // document.getElementById('file').onchange = 

  function showfs(fs) {
    var f = fs[0]
    show(f)
  }

  function show(f) {
    var reader = new FileReader();
    reader.onload = function () {
      setHTML("result", formatjson(arguments[0].target.result));
    }
    reader.readAsText(f, 'utf-8')
  }

  function fileondrop(event) {
    event.preventDefault();
    var files = event.dataTransfer.files;
    showfs(files);
  }

  document.ondragover = function (e) {
    e.preventDefault();
  };
  document.body.ondrop = fileondrop // document.ondrop = fileondrop


  function geturl(url) {
    var xhr = new XMLHttpRequest() || new ActiveXObject("Microsoft.XMLHTTP");

    xhr.onreadystatechange = function () {
      if (xhr.readyState == 4) {
        if ([200, 304].indexOf(xhr.status) > -1) {
          setHTML("result", formatjson(xhr.responseText))
        } else {
          setHTML("result", xhr.status + " " + xhr.statusText);
        }
      }
    }

    xhr.open("GET", url, true);
    setHTML("result", "loading");
    xhr.send()
  }

  function timeStr(i, ff) {
    var n = Number(i);
    var f = ff ? ff : "yyyy-mm-dd HH:MM:SS.xxx"
    n > 0x7FFFFFFF ? n *= 1 : n *= 1000;
    var d = n > 0 ? new Date(n) : new Date();
    return f
      .replace("yyyy", ('0000' + d.getFullYear()).slice(-4))
      .replace("mm", ('00' + (d.getMonth() + 1)).slice(-2))
      .replace("dd", ('00' + d.getDate()).slice(-2))
      .replace("HH", ('00' + d.getHours()).slice(-2))
      .replace("MM", ('00' + d.getMinutes()).slice(-2))
      .replace("SS", ('00' + d.getSeconds()).slice(-2))
      .replace("xxx", ('000' + d.getMilliseconds()).slice(-3));
  }

  var date = timeStr(0, 'yyyymmdd')

</script>

</html>