<html>

<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <style>
    body {
      font-family: "Helvetica Neue", Helvetica, monospace;
    }

    input {
      font-size: 1em;
      width: 30%;
      max-width: 20em;
    }

    .sch {
      margin: 0.5em;
      display: inline-table;
    }

    table {
      border-collapse: collapse;
    }

    td {
      white-space: nowrap;
      word-wrap: keep-all;
      word-break: keep-all;
    }

    .abs {
      position: absolute;
    }

    .rel {
      position: relative;
    }

    .hide {
      display: none;
    }

    .typeZ {
      background-color: #004a80;
      color: #ffffff;
    }

    .typeT {
      background-color: #1445b8;
      color: #c32230;
    }

    .typeK,
    .typeY,
    .type1,
    .type2,
    .type3,
    .type4,
    .type5,
    .type6,
    .type7,
    .type8,
    .type9 {
      background-color: #cc4c33;
      color: #ffffff;
    }

    .type200J {
      background-color: #29a352;
      color: #e6cc4c
    }

    .type200JSG {
      background-color: #29a352;
      color: #ba0c1c;
    }

    .type300AF {
      background-color: #ddddff;
      color: #a80022
    }

    .type300BF {
      background-color: #ddddff;
      color: #bf9540;
    }

    .type400AF {
      background-color: #d4d4d4;
      color: #a80022
    }

    .type400BF {
      background-color: #bf9540;
      color: #ffffff;
    }

    .type400AFZ {
      background-color: #d4d4d4;
      color: #d06301
    }

    .type400BFZ {
      background-color: #bf9540;
      color: #fdfc9a;
    }

    .typeCRH {
      background-color: #ffffff;
      color: #3d668f;
    }

    .typeservice_0 {
      background-color: #567e60;
      color: #fff700
    }

    .typeG {
      background-color: #d4d4d4;
      color: #a80022
    }

    .typeC {
      background-color: #bf9540;
      color: #ffffff;
    }

    .typeD,
    .typeS {
      background-color: #ffffff;
      color: #3d668f;
    }

    .double {
      text-decoration-line: underline;
      text-decoration-style: double;
    }

    .ctl {
      color: #999999;
      text-decoration-line: line-through;
      text-decoration-color: #FF0000;
    }

    #ticket {
      white-space: nowrap;
      word-wrap: keep-all;
      word-break: keep-all;
    }

    .ticket_full {
      background-color: #569b4c;
      color: #ffffff;
    }

    .ticket_warn,
    .seat_warn.ticket_full {
      background-color: #ef8a3b;
      color: #ffffff;
    }

    .ticket_hb {
      background-color: #ffffff;
      color: #5697f5;
    }

    .ticket_out {
      background-color: #ffffff;
      color: #999999;
    }

    .ticket_discount {
      background-color: #ffffff;
      color: #cc4c33;
    }

    .seat_match {
      font-weight: bolder;
      text-decoration: underline #cccccc;
    }

    .weekend {
      color: #ff0000;
      text-decoration: underline #ff0000;
    }

    #trainabs_default>div {
      white-space: nowrap;
    }
  </style>
  <style title='hide'>
  </style>
</head>

<body>
  <div id="view-abs" style="z-index:10;position:absolute;">
    <div id="" class="typeZ" style="position:absolute;left:0px">
      <input type="text" id="station" placeholder="电报码" style="min-width:50px;z-index:100"
        onchange="window.location.hash=this.value;getstat(this.value)" />
    </div>
    <div id="typeabs" class="typeG" style="white-space:nowrap;position:absolute;top:0px;left:0px">
    </div>
  </div>
  <div id="view-scroll" style="height:100%;overflow-y:scroll;">
    <div id="view" style="height:5760px;background-color:#333333;position:relative">
      <div id="timeabs" class="typeG" style="position:absolute;top:0px;left:0px">
      </div>
      <div id="trainabs_default" class="typeD" style="position:absolute;top:0px;left:0px">
      </div>
    </div>
  </div>

  <script>
    function setHTML(id, str) {
      e = document.getElementById(id);
      e && (e.innerHTML = str);
    }

    function setValue(id, str) {
      e = document.getElementById(id);
      e && (e.value = str);
    }

    function getValue(id) {
      e = document.getElementById(id);
      return e ? e.value : "";
    }

    function weekday(date) {
      if (typeof (date) != 'string') return -1
      match = date.match(/(\d+)-(\d+)-(\d+)/)
      if (!match) return -1
      y = Number(match[1])
      m = Number(match[2])
      d = Number(match[3])

      if (m <= 2) {
        m += 12;
        y -= 1;
      }

      c = y / 100 | 0;
      y = y % 100;

      var w = y + (y / 4 | 0) + (c / 4 | 0) - 2 * c + ((13 * (m + 1)) / 5 | 0) + d - 1;
      while (w < 0) {
        w += 7;
      }
      while (w >= 7) {
        w -= 7;
      }
      return w | 0
    }

    function timeStr(i, ff) {
      var n = Number(i);
      var f = ff ? ff : "yyyy-mm-dd HH:MM:SS.xxx"
      n > 0x7FFFFFFF ? n *= 1 : n *= 1000;
      var d = n > 0 ? new Date(n) : new Date();
      return f
        .replace("yyyy", ('0000' + d.getFullYear()).slice(-4))
        .replace("mm", ('00' + (d.getMonth() + 1)).slice(-2))
        .replace("dd", ('00' + d.getDate()).slice(-2))
        .replace("HH", ('00' + d.getHours()).slice(-2))
        .replace("MM", ('00' + d.getMinutes()).slice(-2))
        .replace("SS", ('00' + d.getSeconds()).slice(-2))
        .replace("xxx", ('000' + d.getMilliseconds()).slice(-3));
    }

    var date = timeStr(0, "yyyymmdd")

    function is_a_day(s, d) {
      //console.log("is_a_day(s, d)", s, d)
      if (s == "") {
        return 1
      }

      if (s[0] == '停') {
        return 1 - is_a_day(s.replace("停", ""), d)
      }

      if (s[0] == '!') {
        return 1 - is_a_day(s.replace("!", ""), d)
      }

      if (s[0] == '单' || s[0] == '双') {
        var t_sp = s.split('&')
        var t = t_sp[0]
        // TODO 周期
        /*if (t.indexOf(w) == -1) {
          return 0
        }*/
        return is_a_day(t_sp.length > 1 ? t_sp[1] : '', d)
      }

      if (s[0] == 'w') {
        var w = weekday(d.replace(/(\d\d\d\d)(\d\d)(\d\d)/, "$1-$2-$3"))
        if (w == 0) {
          w = 7
        }
        var t_sp = s.split('&')
        var t = t_sp[0]
        if (t.indexOf(w) == -1) {
          return 0
        }
        return is_a_day(t_sp.length > 1 ? t_sp[1] : '', d)
      }

      //TODO
      if (s.length < 4) {
        return 1
      }

      var yyyymmdd = date.replace(/(\d\d\d\d)-(\d\d)-(\d\d)/, "$1$2$3")
      sp = s.split("|")
      for (i in sp) {
        ssp = sp[i].split("-")
        if (ssp.length) {
          //console.log(ssp[0], ssp[ssp.length-1])
          var tail = ssp[0]
          yyyymmdd = yyyymmdd.slice(0, 8 - tail.length) + tail
          var d0 = yyyymmdd
          var tail = ssp[ssp.length - 1]
          yyyymmdd = yyyymmdd.slice(0, 8 - tail.length) + tail
          var d1 = yyyymmdd
          //console.log(d0, d1)
          //console.log(d, d0 <= d, d <= d1)
          if (d0 <= d && d <= d1) {
            return 1
          }
        }
      }

      return 0
    }


    var px_time = 15//4
    var px_line = 50//50


    function view_scroll() {
      var d = new Date()
      var hh = d.getHours()
      var mm = d.getMinutes()
      var e = document.getElementById('view-scroll')
      e.scrollTop = (hh * 60 + mm) * px_time - e.offsetHeight / 2
    }

    function timeHTML() {
      document.getElementById('view').style.height = px_time * 1445
      str = ''
      for (var i = 0; i <= 1440; i += 15) {
        str += "<div class=\"typeG\" style=\"position:absolute;top:" + (i * px_time) + "px;left:0px\">" + (i / 60 | 0) + ("00" + i % 60).slice(-2) + "</div>"
      }
      return str
    }

    function traintype(code, service) {
      if (service == '0') {
        return "service_0"
      }
      if ('DC'.indexOf(code[0]) > -1 && /^D[78]\d\d$|^D54\d\d$|^D662[1-8]$|^D663[56]$|^D665[5-8]|^C\d{1,3}$|^C15\d\d$|^C56[5-9]\d$|^C5[78]\d\d$|^C81[0-4]\d$|^C8[34]\d\d$|^C8[56]\d\d$|^C87[2-9]\d$|^C950\d$/.test(code)) {
        return "200J"
      }
      if ('DC'.indexOf(code[0]) > -1 && /^D89[89]\d$/.test(code)) {
        return "200JSG"
      }
      return code[0]
    }

    function hash_no(str) {
      var c = str.charAt(0);
      var offset = {
        "Z": 10000, "T": 20000, "K": 30000,
        "Y": 00000,
        "G": 40000, "D": 50000, "C": 60000,
        "S": 70000,
        "L": 80000, "A": 80000, "N": 80000,
        "P": 10000, "Q": 20000, "W": 30000,
        "V": 01000, "B": 02000, "U": 04000, "X": 05000
      }
      var num = Number(str.replace(/\D+/g, '')) % 10000;
      return (offset[c] || 0) + num;
    }
    maxlen = 90000

    var default_line = "ZTK_Z_ZTK_1|GD_G_GD_1|CS_C_CS_1"
    var linemap = {
      "BJP": "ZTK_Z_京沪_1|GD_D_京哈_1|_Z_北京西_0",
      "BXP": "ZTK_Z_京广_1|GD_G_京广_1|CS_Z_京九_1",
      "VNP": "GD_G_京沪_1|C_C_京津_1|ZTK_Z_京沪_1",
      "VAP": "GDS_G_京张_1|ZTK_K_京张_1",
      "IFP": "GDC_G_京沈_1|S_S_东北环_1|_G_北京_0",
      "QIP": "GDS_G_京张_1|_G_北京北_0",
      "IZQ": "G_G_京广_1|D_D_南广贵广_1|CS_C_广珠_1|_G_京广_0"
    }

    function lineHTML(stat) {
      str = ''

      arr = (linemap[stat] || default_line).split("|")

      for (var i = 0; i < arr.length; i++) {
        row = arr[i].split("_")

        name = row[2] + "到"
        color = row[1]
        linenum = i * 2 + 1
        str += (
          "<div id=\"\" class=\"type" + color
          + "\"style=\"position:absolute;left:" + linenum * px_line + "px\">"
          + name
          + "</div>")

        name = row[2] + "发"
        color = row[1]
        linenum = i * 2 + 2

        str += (
          "<div id=\"\" class=\"type" + color
          + "\"style=\"position:absolute;left:" + linenum * px_line + "px\">"
          + name
          + "</div>")
      }
      return str
    }

    BJPVAB = [
      "Y509",
      "Y510",
      "2549",
      "2550",
      "4216",
      "Z15",
      "Z16",
      "Z17",
      "Z18",
      "Z61",
      "Z62",
      "Z83",
      "Z84",
      "Z117",
      "Z118",
      "Z157",
      "Z158",
      "Z203",
      "Z204",
      "Z211",
      "Z212",
      "T17",
      "T18",
      "T47",
      "T48",
      "T297",
      "T298",
      "T4115",
      "T4116",
      "T4117",
      "T4118",
      "T5685",
      "T5686",
      "T5687",
      "T5688",
      "T5695",
      "T5696",
      "T5697",
      "T5698",
      "T5699",
      "T5700",
      "K53",
      "K54",
      "K55",
      "K56",
      "K95",
      "K96",
      "K339",
      "K340",
      "K349",
      "K350",
      "K381",
      "K383",
      "K429",
      "K430",
      "K497",
      "K498",
      "K681",
      "K683",
      "K960",
      "K962",
      "K7714",
      "K7716",
      "D1",
      "D2",
      "D3",
      "D4",
      "D6",
      "D7",
      "D9",
      "D10",
      "D11",
      "D12",
      "D13",
      "D13",
      "D14",
      "D17",
      "D18",
      "D19",
      "D20",
      "D21",
      "D22",
      "D23",
      "D24",
      "D25",
      "D26",
      "D27",
      "D28",
      "D29",
      "D30",
      "D31",
      "D33",
      "D35",
      "D37",
      "D39",
      "D41",
      "D43",
      "D45",
      "D49",
      "D50",
      "D51",
      "D52",
      "D73",
      "D74",
      "D101",
      "D102",
      "D4509",
      "D4510",
      "D4511",
      "D4512",
      "D4515",
      "D4516",
      "D4517",
      "D4518",
      "D6622",
      "D6629",
      "D6635",
      "D6636",
      "S101",
      "S101",
      "S102",
      "S102",
      "S103",
      "S103",
      "S104",
      "S104",
      "S105",
      "S105",
      "S106",
      "S106",
      "S107",
      "S107",
      "S108",
      "S108",
      "S109",
      "S109",
      "S110",
      "S110",
      "S111",
      "S111",
      "S112",
      "S112",
      "4216",

      "K1189",
      "K1190",
      "K2559",
      "K2560",
      "S501",
      "S502",
      "S503",
      "S504",
      "S511",
      "S512",
      "S513",
      "S514",
      "S515",
      "S516",
      "S517",
      "S518",

      "2257",
      "2258",
      "K7711",
      "K7711",
      "K7712",
      "K7712",
      "K7752",
      "K7752",

    ]
    BJPSHH = [
      "D335",
      "D336",
    ]
    BXPJQO = [
      "Y501",
      "Y502",
      "1303",
      "1303",
      "1304",
      "Z184",
      "Z225",
      "Z227",
      "Z350",
      "Z601",
      "Z602",
      "K105",
      "K106",
      "K147",
      "K147",
      "K148",
      "K148",
      "K571",
      "K572",
      "K609",
      "K610",
      "K1071",
      "K1072",
      "K1109",
      "K1110",
      "K1453",
      "K1454",
      "K1613",
      "K1614",
      "K1901",
      "K1902",
      "K5221",
      "K5222",
      "K5223",
      "K5223",
      "K5224",
      "K5224",
      "D727",
      "D728",
      "D733",
      "D734",
      "D735",
      "D736",
      "D737",
      "D738",
      "D739",
      "D740",
      "D745",
      "D746",
    ]
    BXPYPV = [
      "6437",
      "6438",
      "K601",
      "K602",
      "K603",
      "K604",
    ]
    BXPBTC = [
      "1134",
      "2602",
      "2602",
      "2604",
      "2604",
      "Z179",
      "Z180",
      "Z184",
      "Z282",
      "Z284",
      "Z350",
      "K41",
      "K43",
      "K55",
      "K56",
      "K89",
      "K90",
      "K264",
      "K395",
      "K396",
      "K573",
      "K574",
      "K598",
      "K600",
      "K696",
      "K886",
      "K888",
      "K960",
      "K962",
    ]
    BJPTJP = [
      "G217",
      "G218",
      "G219",
      "G220",
      "G237",
      "G238",
      "G371",
      "G372",
      "G393",
      "G394",
      "G395",
      "G396",
      "G399",
      "G400",
    ]

    function stationHTML(stat, arr) {
      linearr = (linemap[stat] || default_line).split("|")

      str = ''
      for (var i = 0; i < arr.length; i++) {
        var sp = arr[i].time.split(":")
        var min = (sp[0] | 0) * 60 + (sp[1] | 0)
        var linenum = 0
        var linename = ""
        /*
        if ('GD'.indexOf(arr[i].code[0]) > -1) {
          linenum = 1 * 2
          if (traintype(arr[i].code, "") == '200J') {
            linenum = 0
          }
        }
        if ('CS'.indexOf(arr[i].code[0]) > -1) {
          linenum = 2 * 2
        }
        */
        var t = traintype(arr[i].code, "")
        if (t == '200J') {
          t = 'Z'
        }
        for (var lineidx = 0; lineidx < linearr.length; lineidx++) {
          row = linearr[lineidx].split("_")
          if (row[0].indexOf(t) > -1) {
            linenum = lineidx * 2
          }
        }

        if (stat == 'BJP') {
          if (BJPVAB.indexOf(arr[i].code) > -1) {
            linenum = 1 * 2
          }
          if (BJPSHH.indexOf(arr[i].code) > -1) {
            linenum = 0 * 2
          }
          if ('CS'.indexOf(arr[i].code[0]) > -1) {
            if (Number(arr[i].code.slice(-1)) % 2 == Number(arr[i].is_dep)) {
              linenum = 1 * 2
            } else {
              linenum = 2 * 2
            }

          }
        }
        if (stat == 'BXP') {
          if (BXPJQO.indexOf(arr[i].code) > -1) {
            linenum = 2 * 2
          }
          if (BXPBTC.indexOf(arr[i].code) > -1) {
            linenum = 2 * 2
            linename = "丰沙"
          }
          if (BXPYPV.indexOf(arr[i].code) > -1) {
            linenum = 2 * 2
            "京原"
            linename = "丰沙"
          }
          if ('S'.indexOf(arr[i].code[0]) > -1) {
            if (Number(arr[i].code.slice(-1)) % 2 == Number(arr[i].is_dep)) {
              linenum = 2 * 2
            } else {
              linenum = 0 * 2
            }
          }
        }
        if (stat == 'VNP') {
          if (BJPTJP.indexOf(arr[i].code) > -1) {
            linenum = 1 * 2
          }
          if (BXPJQO.indexOf(arr[i].code) > -1) {
            linenum = 2 * 2
            linename = "京九"
          }
        }
        if (stat == 'QIP') {
          if ('GDCS'.indexOf(arr[i].code[0]) > -1) {
            if (Number(arr[i].code.slice(-1)) % 2 == Number(arr[i].is_dep)) {

            } else {
              linenum += 1 * 2
            }

          }
        }
        linenum += (arr[i].is_dep == "1" ? 2 : 1) //TODO
        str += (
          "<div class=\"type" + traintype(arr[i].code, "") + (is_a_day(arr[i].date, date) ? "" : " ctl")
          + "\" style=\"position:absolute;top:" + (min * px_time) + "px;left:" + linenum * px_line + "px;z-index:" + (is_a_day(arr[i].date, date) ? 2 : 1) + ";\">"
          + arr[i].code + (linename ? "<br />\n[" + linename + "]" : "") + emu_by_no(arr[i].code)
          + "</div>")
      }
      return str
    }

    function getstat(stat) {
      // var url = "/stat/" + stat
      var url = "/stat/" + stat
      // document.getElementById("result").innerHTML = str
      var xhr = new XMLHttpRequest() || new ActiveXObject("Microsoft.XMLHTTP");
      xhr.onreadystatechange = function () {
        if (xhr.readyState == 4 && xhr.status >= 200 && xhr.status <= 200) {

          data = xhr.responseText.split("\n");
          console.log(data)

          var arr = []
          for (i in data) {
            var row = data[i].split(",");
            if (row.length <= 5) continue
            arr.push({
              day_diff: row[0] || "",
              time: row[1] || "",
              code: row[2] || "",
              station: row[3] || "",
              is_dep: row[4] || "",
              date: row[5] || "",
            })
          }
          setHTML("typeabs", lineHTML(stat))
          setHTML("trainabs_default", stationHTML(stat, arr))

        } else {
          // document.getElementById("result").innerHTML = str + " " + xhr.status + " " + (xhr.statusText || "error");
        }

      }
      xhr.open("GET", url.replace("https://", "/").replace("http://", "/"), true);
      // xhr.open("GET", url, true);
      //xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      xhr.send();
    }

    function css_emu(t) {
      if (t.indexOf("Z") > -1) {
        if (t.indexOf("AF") > -1) {
          return "type400AFZ"
        }
        if (t.indexOf("BF") > -1) {
          return "type400BFZ"
        }
      }

      if (t.indexOf("300AF") > -1) {
        return "type300AF"
      }
      if (t.indexOf("300BF") > -1) {
        return "type300BF"
      }

      if (t.indexOf("AF") > -1) {
        return "type400AF"
      }
      if (t.indexOf("BF") > -1) {
        return "type400BF"
      }

      return "typeCRH"
    }

    function emu_by_no(code) {
      var key = hash_no(code) - 1
      if (!window.emu) return ""
      var trainset = window.emu[key]
      if (!trainset || !trainset.emu_type) return ""
      var c = ""
      if (trainset.emu_double) {
        c += "double"
      }
      c += " " + css_emu(trainset.emu_type)
      return "<br />" + trainset.bureau + "<span class=\"" + c + "\">" + trainset.emu_type.replace("-", "") + "<br />"
        + trainset.emu_no + "</span>"
    }

    var maxlen = 90000
    function getemu() {
      // '/emu/equip'
      // '/emu/ccrgt'
      var url = '/emu/emu' + date + '.csv'

      var xhr = new XMLHttpRequest() || new ActiveXObject("Microsoft.XMLHTTP");

      xhr.onreadystatechange = function () {
        if (xhr.readyState == 4) {
          if ([200, 304].indexOf(xhr.status) > -1) {
            data = xhr.responseText.split("\n");
            window.emu = Array(maxlen)
            for (var i = 0; i < maxlen; i++) {
              window.emu[i] = []
            }

            for (i in data) {
              var row = data[i].split(",");
              if (row.length <= 6) continue
              var key = hash_no(row[0]) - 1

              var m = row[2].match(/(.*)-(\d{4})$/)
              window.emu[key] = {
                train_code: row[0] || "",
                bureau: row[1] || "",
                emu_type: row[2].replace(/(.*)-(\d{4})$/, "$1").replace(/\(\d+\)$/, "").replace(/^2\*/, "") || "",
                emu_no: m ? m[2] : "",
                emu_double: /2\*|重/.test(row[2]) ? 1 : 0,
                emu_flag: 0,
              }
            }

            setHTML("emu", "")
            getstat(window.location.hash.replace('#', '') || "BJP")
          } else {
            setHTML("emu", xhr.status + " " + xhr.statusText);
          }
        }
      }

      xhr.open("GET", url, true);
      setHTML("emu", "loading " + url);
      xhr.send()
    }

    getemu()

    setHTML("timeabs", timeHTML())
    view_scroll()
    var stat = window.location.hash.replace('#', '')
    getstat(stat || "BJP")

  </script>
</body>

</html>